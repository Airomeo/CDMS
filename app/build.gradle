plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id "com.mikepenz.aboutlibraries.plugin" version "10.1.0"
}

// Creates a variable called keystorePropertiesFile, and initializes it to the
// keystore.properties file.
//def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initializes a new Properties() object called keystoreProperties.
//def keystoreProperties = new Properties()

// Loads the keystore.properties file into the keystoreProperties object.
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

//static def gitVersionCode() {
//    def cmd = 'git rev-list HEAD --first-parent --count'
//    cmd.execute().text.trim().toInteger()
//}

//static def gitVersionTag() {
//    def cmd = 'git describe --tags'
//    def version = cmd.execute().text.trim()
//
//    def pattern = "-(\\d+)-g"
//    def matcher = version =~ pattern
//
//    if (matcher) {
//        version = version.substring(0, matcher.start()) + "." + matcher[0][1]
//    } else {
//        version = version + ".0"
//    }
//
//    return version
//}

android {
//    Using Microsoft AppCenter build instead
//    signingConfigs {
//        config {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
//    }

    compileSdk 32
    defaultConfig {
        applicationId "app.i.cdms"
        minSdk 28
        targetSdk 31
        versionCode System.getenv("VERSION_CODE") ? System.getenv("VERSION_CODE").toInteger() : 1
        versionName System.getenv("VERSION_NAME") ? System.getenv("VERSION_NAME").toString() : "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    productFlavors {
//        free {
//            applicationIdSuffix ".free"
//        }
//        pro {
//            applicationIdSuffix ".pro"
//        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            manifestPlaceholders = [appLabel: "@string/app_name_debug"]
        }

        /**
         * The `initWith` property allows you to copy configurations from other build types,
         * then configure only the settings you want to change. This one copies the debug build
         * type, and then changes the manifest placeholder and application ID.
         */
        staging {
            initWith debug
            manifestPlaceholders = [hostName: "internal.example.com"]
            applicationIdSuffix ".debugStaging"
        }

        release {
            manifestPlaceholders = [appLabel: "@string/app_name"]

            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled false

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources false

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config

//            applicationVariants.all { variant ->
//                variant.outputs.all { output ->
//                    def versionName = gitVersionTag()
//                    def versionCode = gitVersionCode()
//                    output.outputFileName = "CDMS_${versionName}.apk"
//
//                    if (variant.buildType.name == 'release') {
//                        output.versionCodeOverride = versionCode
//                        output.versionNameOverride = versionName
//                    }
//                }
//            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.2.0-alpha08"
    }
}
kapt {
    correctErrorTypes true
}
dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.7.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0-rc01'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // An image loading library for Android backed by Kotlin Coroutines.
    implementation('io.coil-kt:coil:2.0.0')
    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    // define a BOM and its version
    implementation(platform('com.squareup.okhttp3:okhttp-bom:5.0.0-alpha.7'))

    // define any required OkHttp artifacts without version
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.squareup.okhttp3:logging-interceptor'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"

    implementation 'com.squareup.moshi:moshi-kotlin:1.13.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.13.0'
//    implementation 'com.google.code.gson:gson:2.8.8'

    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    // Navigation Graph
    implementation("androidx.hilt:hilt-navigation-fragment:1.0.0")

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // DataStore
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    // Visual Studio App Center
    implementation "com.microsoft.appcenter:appcenter-analytics:$appCenterSdkVersion"
    implementation "com.microsoft.appcenter:appcenter-crashes:$appCenterSdkVersion"
    implementation "com.microsoft.appcenter:appcenter-distribute:$appCenterSdkVersion"

    // Compose
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.4.0'
    // Compose Material Design
//    implementation 'androidx.compose.material:material:1.1.1'
    implementation "androidx.compose.material3:material3:1.0.0-alpha13"
    // Animations
    implementation 'androidx.compose.animation:animation:1.1.1'
    // Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.1.1'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0-rc01'
    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.1.1'
    // When using a MDC theme
    implementation "com.google.android.material:compose-theme-adapter:1.1.11"
    // Coil
    implementation('io.coil-kt:coil-compose:2.0.0')
    // Hilt
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")
    implementation 'androidx.navigation:navigation-compose:2.4.2'

    // https://github.com/mikepenz/AboutLibraries
    implementation 'com.mikepenz:aboutlibraries-core:10.2.0'
    implementation 'com.mikepenz:aboutlibraries-compose:10.2.0'

}